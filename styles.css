/* Font Import */
@font-face {
    font-family: 'RetroPixel';
    src: url('assets/fonts/ByteBounce.ttf') format('truetype');
}

html, body {
    height: 100%; /* Ensure the body and HTML take up the full height */
    overflow: auto; /* Enable scrolling if content overflows */
    margin: 0; /* Remove default margin to prevent layout issues */
}

body {
    font-family: 'RetroPixel', sans-serif;
    background-color: #393939; /* Dark background */
    color: inherit; /* Ensure text inherits the correct color */
    font-size: 1.5rem;
    margin: 1rem;
}

body.light-mode {
    background-color: #f2f0f0; /* Light background */
    color: black; /* Black text for light mode */
}

.theme-toggle {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    position: absolute;
    top: 1rem;
    right: 1rem;
    color: inherit;
}

.theme-toggle:hover {
    transform: scale(1.2);
}

h1, h2, h3, p, span, a {
    color: inherit; /* Ensure all text elements inherit the correct color */
}

header {
    text-align: center;
}

header h1 {
    text-shadow: 0 0 5px #f8cce3, 0 0 10px #f8cce3, 0 0 15px #f8cce3; /* Softer pink glow */
    color: white; /* Default color for light mode */
}

body.light-mode header h1 {
    color: black; /* Explicitly set black for light mode */
}

body.dark-mode header h1 {
    color: white; /* Set white for dark mode */
}

header.dark-mode {
    color: #fff; /* White text for dark mode */
}

nav {
    margin: 1rem 0;
    padding: 1rem;
}

nav ul {
    display: flex;
    flex-direction: row; /* Align items in a row */
    justify-content: center; /* Center the items horizontally */
    align-items: center;
    list-style: none; /* Remove default list styling */
    padding: 0;
    margin: 0;
}

nav ul li {
    margin: 0 1rem; /* Add spacing between items */
}

nav ul li img {
    filter: invert(0); /* Invert colors for light mode */
}


body nav ul li a.active img {
    filter: drop-shadow(0 0 5px #ffcaee); /* Pink highlight for active icon */
}

body.light-mode nav ul li a.active img {
    filter: drop-shadow(0 0 5px #ffa7e3); /* Pink highlight for active icon */
}

body.dark-mode nav ul li img {
    filter: invert(1); /* Invert colors for dark mode */
}

.flex-container {
    display: flex;
    flex-direction: row;
    justify-content: center; /* Center items horizontally */
    gap: 1rem; /* Space between items */
}

main {
    padding-bottom: 5rem;
}

article, aside {
    background-color: #fde0f4; /* Optional: Add a background color */
    border-radius: 15px;
    padding: 0 1rem;
    box-shadow: 4px 4px 15px rgb(0, 0, 0); /* Black shadow for both modes */
}

body.dark-mode article, body.dark-mode aside {
    box-shadow: 4px 4px 15px rgb(0, 0, 0); /* Black shadow for both modes */
}

article {
    flex: 0.5;
}

#blog {
    flex: 0.4;
}

aside {
    flex: 0.1;
}

aside ul {
    color: black;
}

main {
    margin-bottom: 6rem; /* Add space to prevent content from overlapping the footer */
}

footer {
    display: flex;
    flex-direction: row; /* Align items in a row */
    justify-content: center; /* Center items horizontally */
    align-items: center; /* Center items vertically */
    position: fixed;
    bottom: 0;
    left: 0; /* Ensure it starts at the left edge */
    width: 100%; /* Ensure it spans the full viewport width */
    background-color: #fde0f4; /* Optional: Add a background color */
    margin: 0; /* Reset margin to prevent overflow */
    padding: 1rem 0; /* Adjust padding for spacing */
}

footer ul {
    display: flex;
    flex-direction: row; /* Align items in a row */
    justify-content: center; /* Center the items horizontally */
    align-items: center;
    list-style: none; /* Remove default list styling */
    padding: 0;
    margin: 0;
    color: black;

}

footer ul li {
    margin: 0 1rem; /* Add spacing between items */
}

footer ul li p {
    color: black;
}

a:link {
    color: rgb(253, 82, 171); /* Unvisited links */
}

a:visited {
    color: rgb(153, 102, 254); /* Visited links */
}

@media (max-width: 720px) {
    .flex-container {
        flex-direction: column; /* Stack items vertically */
    }
    article, aside {
        flex: 1; /* Allow items to take full width */
    }
}